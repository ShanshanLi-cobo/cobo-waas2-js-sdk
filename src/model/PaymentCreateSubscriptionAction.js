/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PaymentSubscriptionActionData from './PaymentSubscriptionActionData';

/**
 * The PaymentCreateSubscriptionAction model module.
 * @module model/PaymentCreateSubscriptionAction
 */
class PaymentCreateSubscriptionAction {
    /**
     * Constructs a new <code>PaymentCreateSubscriptionAction</code>.
     * @alias module:model/PaymentCreateSubscriptionAction
     * @param request_id {String} The subscription action request id.
     * @param plan_id {String} The subscription plan id in cobo.
     * @param merchant_id {String} The merchant id in cobo.
     */
    constructor(request_id, plan_id, merchant_id) { 
        
        PaymentCreateSubscriptionAction.initialize(this, request_id, plan_id, merchant_id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, request_id, plan_id, merchant_id) { 
        obj['request_id'] = request_id;
        obj['plan_id'] = plan_id;
        obj['merchant_id'] = merchant_id;
    }

    /**
     * Constructs a <code>PaymentCreateSubscriptionAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentCreateSubscriptionAction} obj Optional instance to populate.
     * @return {module:model/PaymentCreateSubscriptionAction} The populated <code>PaymentCreateSubscriptionAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentCreateSubscriptionAction();

            if (data.hasOwnProperty('request_id')) {
                obj['request_id'] = ApiClient.convertToType(data['request_id'], 'String');
            }
            if (data.hasOwnProperty('plan_id')) {
                obj['plan_id'] = ApiClient.convertToType(data['plan_id'], 'String');
            }
            if (data.hasOwnProperty('merchant_id')) {
                obj['merchant_id'] = ApiClient.convertToType(data['merchant_id'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = PaymentSubscriptionActionData.constructFromObject(data['data']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentCreateSubscriptionAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentCreateSubscriptionAction</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PaymentCreateSubscriptionAction.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['request_id'] && !(typeof data['request_id'] === 'string' || data['request_id'] instanceof String)) {
            throw new Error("Expected the field `request_id` to be a primitive type in the JSON string but got " + data['request_id']);
        }
        // ensure the json data is a string
        if (data['plan_id'] && !(typeof data['plan_id'] === 'string' || data['plan_id'] instanceof String)) {
            throw new Error("Expected the field `plan_id` to be a primitive type in the JSON string but got " + data['plan_id']);
        }
        // ensure the json data is a string
        if (data['merchant_id'] && !(typeof data['merchant_id'] === 'string' || data['merchant_id'] instanceof String)) {
            throw new Error("Expected the field `merchant_id` to be a primitive type in the JSON string but got " + data['merchant_id']);
        }
        // validate the optional field `data`
        if (data['data']) { // data not null
          if (!!PaymentSubscriptionActionData.validateJSON) {
            PaymentSubscriptionActionData.validateJSON(data['data']);
          }
        }

        return true;
    }


}

PaymentCreateSubscriptionAction.RequiredProperties = ["request_id", "plan_id", "merchant_id"];

/**
 * The subscription action request id.
 * @member {String} request_id
 */
PaymentCreateSubscriptionAction.prototype['request_id'] = undefined;

/**
 * The subscription plan id in cobo.
 * @member {String} plan_id
 */
PaymentCreateSubscriptionAction.prototype['plan_id'] = undefined;

/**
 * The merchant id in cobo.
 * @member {String} merchant_id
 */
PaymentCreateSubscriptionAction.prototype['merchant_id'] = undefined;

/**
 * @member {module:model/PaymentSubscriptionActionData} data
 */
PaymentCreateSubscriptionAction.prototype['data'] = undefined;






export default PaymentCreateSubscriptionAction;

