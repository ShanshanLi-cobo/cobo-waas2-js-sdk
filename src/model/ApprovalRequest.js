/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppWorkflowField from './AppWorkflowField';
import ApprovalStatus from './ApprovalStatus';

/**
 * The ApprovalRequest model module.
 * @module model/ApprovalRequest
 */
class ApprovalRequest {
    /**
     * Constructs a new <code>ApprovalRequest</code>.
     * The information of an app workflow approval.
     * @alias module:model/ApprovalRequest
     * @param approval_id {String} 
     * @param request_id {String} 
     * @param fields {Array.<module:model/AppWorkflowField>} 
     * @param status {module:model/ApprovalStatus} 
     * @param initiated_timestamp {Number} The time when the approval was initiated, in Unix timestamp format, measured in milliseconds.
     */
    constructor(approval_id, request_id, fields, status, initiated_timestamp) { 
        
        ApprovalRequest.initialize(this, approval_id, request_id, fields, status, initiated_timestamp);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, approval_id, request_id, fields, status, initiated_timestamp) { 
        obj['approval_id'] = approval_id;
        obj['request_id'] = request_id;
        obj['fields'] = fields;
        obj['status'] = status;
        obj['initiated_timestamp'] = initiated_timestamp;
    }

    /**
     * Constructs a <code>ApprovalRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApprovalRequest} obj Optional instance to populate.
     * @return {module:model/ApprovalRequest} The populated <code>ApprovalRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApprovalRequest();

            if (data.hasOwnProperty('approval_id')) {
                obj['approval_id'] = ApiClient.convertToType(data['approval_id'], 'String');
            }
            if (data.hasOwnProperty('request_id')) {
                obj['request_id'] = ApiClient.convertToType(data['request_id'], 'String');
            }
            if (data.hasOwnProperty('fields')) {
                obj['fields'] = ApiClient.convertToType(data['fields'], [AppWorkflowField]);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApprovalStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('initiated_timestamp')) {
                obj['initiated_timestamp'] = ApiClient.convertToType(data['initiated_timestamp'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApprovalRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApprovalRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApprovalRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['approval_id'] && !(typeof data['approval_id'] === 'string' || data['approval_id'] instanceof String)) {
            throw new Error("Expected the field `approval_id` to be a primitive type in the JSON string but got " + data['approval_id']);
        }
        // ensure the json data is a string
        if (data['request_id'] && !(typeof data['request_id'] === 'string' || data['request_id'] instanceof String)) {
            throw new Error("Expected the field `request_id` to be a primitive type in the JSON string but got " + data['request_id']);
        }
        if (data['fields']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['fields'])) {
                throw new Error("Expected the field `fields` to be an array in the JSON data but got " + data['fields']);
            }
            // validate the optional field `fields` (array)
            for (const item of data['fields']) {
                AppWorkflowField.validateJSON(item);
            };
        }

        return true;
    }


}

ApprovalRequest.RequiredProperties = ["approval_id", "request_id", "fields", "status", "initiated_timestamp"];

/**
 * @member {String} approval_id
 */
ApprovalRequest.prototype['approval_id'] = undefined;

/**
 * @member {String} request_id
 */
ApprovalRequest.prototype['request_id'] = undefined;

/**
 * @member {Array.<module:model/AppWorkflowField>} fields
 */
ApprovalRequest.prototype['fields'] = undefined;

/**
 * @member {module:model/ApprovalStatus} status
 */
ApprovalRequest.prototype['status'] = undefined;

/**
 * The time when the approval was initiated, in Unix timestamp format, measured in milliseconds.
 * @member {Number} initiated_timestamp
 */
ApprovalRequest.prototype['initiated_timestamp'] = undefined;






export default ApprovalRequest;

