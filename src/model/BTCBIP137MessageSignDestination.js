/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MessageSignDestinationType from './MessageSignDestinationType';

/**
 * The BTCBIP137MessageSignDestination model module.
 * @module model/BTCBIP137MessageSignDestination
 */
class BTCBIP137MessageSignDestination {
    /**
     * Constructs a new <code>BTCBIP137MessageSignDestination</code>.
     * The information about the destination &#x60;BTC_BIP_137&#x60;. Refer to [Transaction sources and destinations](https://www.cobo.com/developers/v2/guides/transactions/sources-and-destinations) for a detailed introduction about the supported sources and destinations for each transaction type.
     * @alias module:model/BTCBIP137MessageSignDestination
     * @param destination_type {module:model/MessageSignDestinationType} 
     * @param message_bip137 {String} Message to be signed, in hexadecimal format.
     */
    constructor(destination_type, message_bip137) { 
        
        BTCBIP137MessageSignDestination.initialize(this, destination_type, message_bip137);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, destination_type, message_bip137) { 
        obj['destination_type'] = destination_type;
        obj['message_bip137'] = message_bip137;
    }

    /**
     * Constructs a <code>BTCBIP137MessageSignDestination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BTCBIP137MessageSignDestination} obj Optional instance to populate.
     * @return {module:model/BTCBIP137MessageSignDestination} The populated <code>BTCBIP137MessageSignDestination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BTCBIP137MessageSignDestination();

            if (data.hasOwnProperty('destination_type')) {
                obj['destination_type'] = MessageSignDestinationType.constructFromObject(data['destination_type']);
            }
            if (data.hasOwnProperty('message_bip137')) {
                obj['message_bip137'] = ApiClient.convertToType(data['message_bip137'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BTCBIP137MessageSignDestination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BTCBIP137MessageSignDestination</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BTCBIP137MessageSignDestination.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['message_bip137'] && !(typeof data['message_bip137'] === 'string' || data['message_bip137'] instanceof String)) {
            throw new Error("Expected the field `message_bip137` to be a primitive type in the JSON string but got " + data['message_bip137']);
        }

        return true;
    }


}

BTCBIP137MessageSignDestination.RequiredProperties = ["destination_type", "message_bip137"];

/**
 * @member {module:model/MessageSignDestinationType} destination_type
 */
BTCBIP137MessageSignDestination.prototype['destination_type'] = undefined;

/**
 * Message to be signed, in hexadecimal format.
 * @member {String} message_bip137
 */
BTCBIP137MessageSignDestination.prototype['message_bip137'] = undefined;






export default BTCBIP137MessageSignDestination;

