/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApprovalResult from './ApprovalResult';

/**
 * The ApprovalUserDetail model module.
 * @module model/ApprovalUserDetail
 */
class ApprovalUserDetail {
    /**
     * Constructs a new <code>ApprovalUserDetail</code>.
     * Details about a user involved in a transaction approval workflow. 
     * @alias module:model/ApprovalUserDetail
     */
    constructor() { 
        
        ApprovalUserDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApprovalUserDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApprovalUserDetail} obj Optional instance to populate.
     * @return {module:model/ApprovalUserDetail} The populated <code>ApprovalUserDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApprovalUserDetail();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('pubkey')) {
                obj['pubkey'] = ApiClient.convertToType(data['pubkey'], 'String');
            }
            if (data.hasOwnProperty('signature')) {
                obj['signature'] = ApiClient.convertToType(data['signature'], 'String');
            }
            if (data.hasOwnProperty('statement_uuid')) {
                obj['statement_uuid'] = ApiClient.convertToType(data['statement_uuid'], 'String');
            }
            if (data.hasOwnProperty('result')) {
                obj['result'] = ApprovalResult.constructFromObject(data['result']);
            }
            if (data.hasOwnProperty('approval_result_code')) {
                obj['approval_result_code'] = ApiClient.convertToType(data['approval_result_code'], 'Number');
            }
            if (data.hasOwnProperty('created_time')) {
                obj['created_time'] = ApiClient.convertToType(data['created_time'], 'Number');
            }
            if (data.hasOwnProperty('template_version')) {
                obj['template_version'] = ApiClient.convertToType(data['template_version'], 'String');
            }
            if (data.hasOwnProperty('header_title')) {
                obj['header_title'] = ApiClient.convertToType(data['header_title'], 'String');
            }
            if (data.hasOwnProperty('is_for_sign')) {
                obj['is_for_sign'] = ApiClient.convertToType(data['is_for_sign'], 'Boolean');
            }
            if (data.hasOwnProperty('show_info')) {
                obj['show_info'] = ApiClient.convertToType(data['show_info'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('message_version')) {
                obj['message_version'] = ApiClient.convertToType(data['message_version'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('extra_message')) {
                obj['extra_message'] = ApiClient.convertToType(data['extra_message'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApprovalUserDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApprovalUserDetail</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['pubkey'] && !(typeof data['pubkey'] === 'string' || data['pubkey'] instanceof String)) {
            throw new Error("Expected the field `pubkey` to be a primitive type in the JSON string but got " + data['pubkey']);
        }
        // ensure the json data is a string
        if (data['signature'] && !(typeof data['signature'] === 'string' || data['signature'] instanceof String)) {
            throw new Error("Expected the field `signature` to be a primitive type in the JSON string but got " + data['signature']);
        }
        // ensure the json data is a string
        if (data['statement_uuid'] && !(typeof data['statement_uuid'] === 'string' || data['statement_uuid'] instanceof String)) {
            throw new Error("Expected the field `statement_uuid` to be a primitive type in the JSON string but got " + data['statement_uuid']);
        }
        // ensure the json data is a string
        if (data['template_version'] && !(typeof data['template_version'] === 'string' || data['template_version'] instanceof String)) {
            throw new Error("Expected the field `template_version` to be a primitive type in the JSON string but got " + data['template_version']);
        }
        // ensure the json data is a string
        if (data['header_title'] && !(typeof data['header_title'] === 'string' || data['header_title'] instanceof String)) {
            throw new Error("Expected the field `header_title` to be a primitive type in the JSON string but got " + data['header_title']);
        }
        // ensure the json data is a string
        if (data['show_info'] && !(typeof data['show_info'] === 'string' || data['show_info'] instanceof String)) {
            throw new Error("Expected the field `show_info` to be a primitive type in the JSON string but got " + data['show_info']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }
        // ensure the json data is a string
        if (data['message_version'] && !(typeof data['message_version'] === 'string' || data['message_version'] instanceof String)) {
            throw new Error("Expected the field `message_version` to be a primitive type in the JSON string but got " + data['message_version']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['extra_message'] && !(typeof data['extra_message'] === 'string' || data['extra_message'] instanceof String)) {
            throw new Error("Expected the field `extra_message` to be a primitive type in the JSON string but got " + data['extra_message']);
        }

        return true;
    }


}



/**
 * Name of the user who approved the transaction.
 * @member {String} name
 */
ApprovalUserDetail.prototype['name'] = undefined;

/**
 * Email of the user.
 * @member {String} email
 */
ApprovalUserDetail.prototype['email'] = undefined;

/**
 * Public key of the user.
 * @member {String} pubkey
 */
ApprovalUserDetail.prototype['pubkey'] = undefined;

/**
 * Signature produced by the user for this approval.
 * @member {String} signature
 */
ApprovalUserDetail.prototype['signature'] = undefined;

/**
 * UUID of the statement associated with this approval.
 * @member {String} statement_uuid
 */
ApprovalUserDetail.prototype['statement_uuid'] = undefined;

/**
 * @member {module:model/ApprovalResult} result
 */
ApprovalUserDetail.prototype['result'] = undefined;

/**
 * Integer value representing the result of the approval.
 * @member {Number} approval_result_code
 */
ApprovalUserDetail.prototype['approval_result_code'] = undefined;

/**
 * Timestamp when the approval was created.
 * @member {Number} created_time
 */
ApprovalUserDetail.prototype['created_time'] = undefined;

/**
 * Version of the template used for the transaction approval.
 * @member {String} template_version
 */
ApprovalUserDetail.prototype['template_version'] = undefined;

/**
 * Display title used in the transaction approval.
 * @member {String} header_title
 */
ApprovalUserDetail.prototype['header_title'] = undefined;

/**
 * Indicates whether this approval requires signing: - `true`: The user must sign the transaction. - `false`: The user only needs to approve or reject without signing. 
 * @member {Boolean} is_for_sign
 */
ApprovalUserDetail.prototype['is_for_sign'] = undefined;

/**
 * Additional information to show for the transaction approval.
 * @member {String} show_info
 */
ApprovalUserDetail.prototype['show_info'] = undefined;

/**
 * Language used for the transaction approval.
 * @member {String} language
 */
ApprovalUserDetail.prototype['language'] = undefined;

/**
 * Version of the message format used for the transaction approval.
 * @member {String} message_version
 */
ApprovalUserDetail.prototype['message_version'] = undefined;

/**
 * Message associated with the transaction approval.
 * @member {String} message
 */
ApprovalUserDetail.prototype['message'] = undefined;

/**
 * Any additional message or information related to the transaction approval.
 * @member {String} extra_message
 */
ApprovalUserDetail.prototype['extra_message'] = undefined;






export default ApprovalUserDetail;

