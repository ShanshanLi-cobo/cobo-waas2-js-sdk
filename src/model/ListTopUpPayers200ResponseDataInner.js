/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PaymentTransaction from './PaymentTransaction';

/**
 * The ListTopUpPayers200ResponseDataInner model module.
 * @module model/ListTopUpPayers200ResponseDataInner
 */
class ListTopUpPayers200ResponseDataInner {
    /**
     * Constructs a new <code>ListTopUpPayers200ResponseDataInner</code>.
     * @alias module:model/ListTopUpPayers200ResponseDataInner
     * @param merchant_id {String} Merchant ID, e.g., \"M1001\"
     * @param payer_id {String} Unique payer identifier on the Cobo side, auto-generated by the system. 
     * @param developer_fee_rate {String} Developer fee rate for this token, e.g., \"0.01\" represents 1%
     */
    constructor(merchant_id, payer_id, developer_fee_rate) { 
        
        ListTopUpPayers200ResponseDataInner.initialize(this, merchant_id, payer_id, developer_fee_rate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, merchant_id, payer_id, developer_fee_rate) { 
        obj['merchant_id'] = merchant_id;
        obj['payer_id'] = payer_id;
        obj['developer_fee_rate'] = developer_fee_rate;
    }

    /**
     * Constructs a <code>ListTopUpPayers200ResponseDataInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListTopUpPayers200ResponseDataInner} obj Optional instance to populate.
     * @return {module:model/ListTopUpPayers200ResponseDataInner} The populated <code>ListTopUpPayers200ResponseDataInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListTopUpPayers200ResponseDataInner();

            if (data.hasOwnProperty('merchant_id')) {
                obj['merchant_id'] = ApiClient.convertToType(data['merchant_id'], 'String');
            }
            if (data.hasOwnProperty('payer_id')) {
                obj['payer_id'] = ApiClient.convertToType(data['payer_id'], 'String');
            }
            if (data.hasOwnProperty('developer_fee_rate')) {
                obj['developer_fee_rate'] = ApiClient.convertToType(data['developer_fee_rate'], 'String');
            }
            if (data.hasOwnProperty('created_timestamp')) {
                obj['created_timestamp'] = ApiClient.convertToType(data['created_timestamp'], 'Number');
            }
            if (data.hasOwnProperty('updated_timestamp')) {
                obj['updated_timestamp'] = ApiClient.convertToType(data['updated_timestamp'], 'Number');
            }
            if (data.hasOwnProperty('transactions')) {
                obj['transactions'] = ApiClient.convertToType(data['transactions'], [PaymentTransaction]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListTopUpPayers200ResponseDataInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListTopUpPayers200ResponseDataInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ListTopUpPayers200ResponseDataInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['merchant_id'] && !(typeof data['merchant_id'] === 'string' || data['merchant_id'] instanceof String)) {
            throw new Error("Expected the field `merchant_id` to be a primitive type in the JSON string but got " + data['merchant_id']);
        }
        // ensure the json data is a string
        if (data['payer_id'] && !(typeof data['payer_id'] === 'string' || data['payer_id'] instanceof String)) {
            throw new Error("Expected the field `payer_id` to be a primitive type in the JSON string but got " + data['payer_id']);
        }
        // ensure the json data is a string
        if (data['developer_fee_rate'] && !(typeof data['developer_fee_rate'] === 'string' || data['developer_fee_rate'] instanceof String)) {
            throw new Error("Expected the field `developer_fee_rate` to be a primitive type in the JSON string but got " + data['developer_fee_rate']);
        }
        if (data['transactions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['transactions'])) {
                throw new Error("Expected the field `transactions` to be an array in the JSON data but got " + data['transactions']);
            }
            // validate the optional field `transactions` (array)
            for (const item of data['transactions']) {
                PaymentTransaction.validateJSON(item);
            };
        }

        return true;
    }


}

ListTopUpPayers200ResponseDataInner.RequiredProperties = ["merchant_id", "payer_id", "developer_fee_rate"];

/**
 * Merchant ID, e.g., \"M1001\"
 * @member {String} merchant_id
 */
ListTopUpPayers200ResponseDataInner.prototype['merchant_id'] = undefined;

/**
 * Unique payer identifier on the Cobo side, auto-generated by the system. 
 * @member {String} payer_id
 */
ListTopUpPayers200ResponseDataInner.prototype['payer_id'] = undefined;

/**
 * Developer fee rate for this token, e.g., \"0.01\" represents 1%
 * @member {String} developer_fee_rate
 */
ListTopUpPayers200ResponseDataInner.prototype['developer_fee_rate'] = undefined;

/**
 * The created time of the payer, represented as a UNIX timestamp in seconds.
 * @member {Number} created_timestamp
 */
ListTopUpPayers200ResponseDataInner.prototype['created_timestamp'] = undefined;

/**
 * The updated time of the payer, represented as a UNIX timestamp in seconds.
 * @member {Number} updated_timestamp
 */
ListTopUpPayers200ResponseDataInner.prototype['updated_timestamp'] = undefined;

/**
 * An array of transactions associated with this payer. Each transaction represents a separate blockchain operation related to the settlement process.
 * @member {Array.<module:model/PaymentTransaction>} transactions
 */
ListTopUpPayers200ResponseDataInner.prototype['transactions'] = undefined;






export default ListTopUpPayers200ResponseDataInner;

