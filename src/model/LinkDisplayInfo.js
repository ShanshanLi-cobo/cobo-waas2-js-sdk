/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LinkDisplayInfo model module.
 * @module model/LinkDisplayInfo
 */
class LinkDisplayInfo {
    /**
     * Constructs a new <code>LinkDisplayInfo</code>.
     * @alias module:model/LinkDisplayInfo
     */
    constructor() { 
        
        LinkDisplayInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LinkDisplayInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LinkDisplayInfo} obj Optional instance to populate.
     * @return {module:model/LinkDisplayInfo} The populated <code>LinkDisplayInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LinkDisplayInfo();

            if (data.hasOwnProperty('developer_name')) {
                obj['developer_name'] = ApiClient.convertToType(data['developer_name'], 'String');
            }
            if (data.hasOwnProperty('logo')) {
                obj['logo'] = ApiClient.convertToType(data['logo'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LinkDisplayInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LinkDisplayInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['developer_name'] && !(typeof data['developer_name'] === 'string' || data['developer_name'] instanceof String)) {
            throw new Error("Expected the field `developer_name` to be a primitive type in the JSON string but got " + data['developer_name']);
        }
        // ensure the json data is a string
        if (data['logo'] && !(typeof data['logo'] === 'string' || data['logo'] instanceof String)) {
            throw new Error("Expected the field `logo` to be a primitive type in the JSON string but got " + data['logo']);
        }

        return true;
    }


}



/**
 * Optional display name for the developer/platform. This name may be shown to end users during the payment process. 
 * @member {String} developer_name
 */
LinkDisplayInfo.prototype['developer_name'] = undefined;

/**
 * Optional URL to the developer's logo image. The logo may be displayed to end users during the payment process.  Supported formats: PNG, JPG, SVG. Maximum file size: 2MB. 
 * @member {String} logo
 */
LinkDisplayInfo.prototype['logo'] = undefined;






export default LinkDisplayInfo;

