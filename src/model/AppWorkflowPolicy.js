/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PolicyAction from './PolicyAction';
import PolicyCondition from './PolicyCondition';

/**
 * The AppWorkflowPolicy model module.
 * @module model/AppWorkflowPolicy
 */
class AppWorkflowPolicy {
    /**
     * Constructs a new <code>AppWorkflowPolicy</code>.
     * The information of an app workflow policy entry.
     * @alias module:model/AppWorkflowPolicy
     * @param action {module:model/PolicyAction} 
     */
    constructor(action) { 
        
        AppWorkflowPolicy.initialize(this, action);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action) { 
        obj['action'] = action;
    }

    /**
     * Constructs a <code>AppWorkflowPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppWorkflowPolicy} obj Optional instance to populate.
     * @return {module:model/AppWorkflowPolicy} The populated <code>AppWorkflowPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppWorkflowPolicy();

            if (data.hasOwnProperty('action')) {
                obj['action'] = PolicyAction.constructFromObject(data['action']);
            }
            if (data.hasOwnProperty('conditions')) {
                obj['conditions'] = ApiClient.convertToType(data['conditions'], [PolicyCondition]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppWorkflowPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppWorkflowPolicy</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AppWorkflowPolicy.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `action`
        if (data['action']) { // data not null
          if (!!PolicyAction.validateJSON) {
            PolicyAction.validateJSON(data['action']);
          }
        }
        if (data['conditions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['conditions'])) {
                throw new Error("Expected the field `conditions` to be an array in the JSON data but got " + data['conditions']);
            }
            // validate the optional field `conditions` (array)
            for (const item of data['conditions']) {
                PolicyCondition.validateJSON(item);
            };
        }

        return true;
    }


}

AppWorkflowPolicy.RequiredProperties = ["action"];

/**
 * @member {module:model/PolicyAction} action
 */
AppWorkflowPolicy.prototype['action'] = undefined;

/**
 * @member {Array.<module:model/PolicyCondition>} conditions
 */
AppWorkflowPolicy.prototype['conditions'] = undefined;






export default AppWorkflowPolicy;

