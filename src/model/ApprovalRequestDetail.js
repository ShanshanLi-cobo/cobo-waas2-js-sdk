/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApprovalEntry from './ApprovalEntry';
import ApprovalStatus from './ApprovalStatus';
import ApprovalUser from './ApprovalUser';

/**
 * The ApprovalRequestDetail model module.
 * @module model/ApprovalRequestDetail
 */
class ApprovalRequestDetail {
    /**
     * Constructs a new <code>ApprovalRequestDetail</code>.
     * The information of an app workflow approval detail.
     * @alias module:model/ApprovalRequestDetail
     * @param initiator {module:model/ApprovalUser} 
     * @param status {module:model/ApprovalStatus} 
     */
    constructor(initiator, status) { 
        
        ApprovalRequestDetail.initialize(this, initiator, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, initiator, status) { 
        obj['initiator'] = initiator;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>ApprovalRequestDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApprovalRequestDetail} obj Optional instance to populate.
     * @return {module:model/ApprovalRequestDetail} The populated <code>ApprovalRequestDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApprovalRequestDetail();

            if (data.hasOwnProperty('approval_id')) {
                obj['approval_id'] = ApiClient.convertToType(data['approval_id'], 'String');
            }
            if (data.hasOwnProperty('initiator')) {
                obj['initiator'] = ApprovalUser.constructFromObject(data['initiator']);
            }
            if (data.hasOwnProperty('approved_list')) {
                obj['approved_list'] = ApiClient.convertToType(data['approved_list'], [ApprovalEntry]);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApprovalStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('modified_timestamp')) {
                obj['modified_timestamp'] = ApiClient.convertToType(data['modified_timestamp'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApprovalRequestDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApprovalRequestDetail</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApprovalRequestDetail.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['approval_id'] && !(typeof data['approval_id'] === 'string' || data['approval_id'] instanceof String)) {
            throw new Error("Expected the field `approval_id` to be a primitive type in the JSON string but got " + data['approval_id']);
        }
        // validate the optional field `initiator`
        if (data['initiator']) { // data not null
          if (!!ApprovalUser.validateJSON) {
            ApprovalUser.validateJSON(data['initiator']);
          }
        }
        if (data['approved_list']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['approved_list'])) {
                throw new Error("Expected the field `approved_list` to be an array in the JSON data but got " + data['approved_list']);
            }
            // validate the optional field `approved_list` (array)
            for (const item of data['approved_list']) {
                ApprovalEntry.validateJSON(item);
            };
        }

        return true;
    }


}

ApprovalRequestDetail.RequiredProperties = ["initiator", "status"];

/**
 * @member {String} approval_id
 */
ApprovalRequestDetail.prototype['approval_id'] = undefined;

/**
 * @member {module:model/ApprovalUser} initiator
 */
ApprovalRequestDetail.prototype['initiator'] = undefined;

/**
 * @member {Array.<module:model/ApprovalEntry>} approved_list
 */
ApprovalRequestDetail.prototype['approved_list'] = undefined;

/**
 * @member {module:model/ApprovalStatus} status
 */
ApprovalRequestDetail.prototype['status'] = undefined;

/**
 * The time when the approval was modified, in Unix timestamp format, measured in milliseconds.
 * @member {Number} modified_timestamp
 */
ApprovalRequestDetail.prototype['modified_timestamp'] = undefined;






export default ApprovalRequestDetail;

