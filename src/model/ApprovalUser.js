/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApprovalStatus from './ApprovalStatus';

/**
 * The ApprovalUser model module.
 * @module model/ApprovalUser
 */
class ApprovalUser {
    /**
     * Constructs a new <code>ApprovalUser</code>.
     * The information of an app workflow approval user entry.
     * @alias module:model/ApprovalUser
     * @param email {String} The approval user email.
     * @param status {module:model/ApprovalStatus} 
     * @param created_timestamp {Number} The time when the approval was created, in Unix timestamp format, measured in milliseconds.
     */
    constructor(email, status, created_timestamp) { 
        
        ApprovalUser.initialize(this, email, status, created_timestamp);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, email, status, created_timestamp) { 
        obj['email'] = email;
        obj['status'] = status;
        obj['created_timestamp'] = created_timestamp;
    }

    /**
     * Constructs a <code>ApprovalUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApprovalUser} obj Optional instance to populate.
     * @return {module:model/ApprovalUser} The populated <code>ApprovalUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApprovalUser();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApprovalStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('created_timestamp')) {
                obj['created_timestamp'] = ApiClient.convertToType(data['created_timestamp'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApprovalUser</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApprovalUser</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApprovalUser.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}

ApprovalUser.RequiredProperties = ["email", "status", "created_timestamp"];

/**
 * The approval user email.
 * @member {String} email
 */
ApprovalUser.prototype['email'] = undefined;

/**
 * The approval user name.
 * @member {String} name
 */
ApprovalUser.prototype['name'] = undefined;

/**
 * @member {module:model/ApprovalStatus} status
 */
ApprovalUser.prototype['status'] = undefined;

/**
 * The time when the approval was created, in Unix timestamp format, measured in milliseconds.
 * @member {Number} created_timestamp
 */
ApprovalUser.prototype['created_timestamp'] = undefined;






export default ApprovalUser;

