/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EvmEip1559FeeRate from './EvmEip1559FeeRate';
import EvmLegacyFeeRate from './EvmLegacyFeeRate';
import FeeType from './FeeType';
import FixedFeeRate from './FixedFeeRate';
import UtxoFeeBasePrice from './UtxoFeeBasePrice';
import UtxoFeeRate from './UtxoFeeRate';

/**
 * The FeeRate model module.
 * @module model/FeeRate
 */
class FeeRate {
    /**
     * Constructs a new <code>FeeRate</code>.
     * @alias module:model/FeeRate
     * @param {(module:model/EvmEip1559FeeRate|module:model/EvmLegacyFeeRate|module:model/FixedFeeRate|module:model/UtxoFeeRate)} instance The actual instance to initialize FeeRate.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        var discriminatorValue = instance["fee_type"];

        if (discriminatorValue) {
            switch(discriminatorValue) {
                case "EVM_EIP_1559":
                    this.actualInstance = EvmEip1559FeeRate.constructFromObject(instance);
                    match++;
                    break;
                case "EVM_Legacy":
                    this.actualInstance = EvmLegacyFeeRate.constructFromObject(instance);
                    match++;
                    break;
                case "Fixed":
                    this.actualInstance = FixedFeeRate.constructFromObject(instance);
                    match++;
                    break;
                case "UTXO":
                    this.actualInstance = UtxoFeeRate.constructFromObject(instance);
                    match++;
                    break;
                default:
                    errorMessages.push("Unrecognized discriminator value: " + discriminatorValue);
                    break;
            }
            return;
        }

        try {
            if (instance instanceof FixedFeeRate) {
                this.actualInstance = instance;
            } else if(!!FixedFeeRate.validateJSON && FixedFeeRate.validateJSON(instance)){
                // plain JS object
                // create FixedFeeRate from JS object
                this.actualInstance = FixedFeeRate.constructFromObject(instance);
            } else {
                if(FixedFeeRate.constructFromObject(instance)) {
                    if (!!FixedFeeRate.constructFromObject(instance).toJSON) {
                        if (FixedFeeRate.constructFromObject(instance).toJSON()) {
                            this.actualInstance = FixedFeeRate.constructFromObject(instance);
                        }
                    } else {
                        this.actualInstance = FixedFeeRate.constructFromObject(instance);
                    }
                }

            }
            match++;
        } catch(err) {
            // json data failed to deserialize into FixedFeeRate
            errorMessages.push("Failed to construct FixedFeeRate: " + err)
        }

        try {
            if (instance instanceof EvmEip1559FeeRate) {
                this.actualInstance = instance;
            } else if(!!EvmEip1559FeeRate.validateJSON && EvmEip1559FeeRate.validateJSON(instance)){
                // plain JS object
                // create EvmEip1559FeeRate from JS object
                this.actualInstance = EvmEip1559FeeRate.constructFromObject(instance);
            } else {
                if(EvmEip1559FeeRate.constructFromObject(instance)) {
                    if (!!EvmEip1559FeeRate.constructFromObject(instance).toJSON) {
                        if (EvmEip1559FeeRate.constructFromObject(instance).toJSON()) {
                            this.actualInstance = EvmEip1559FeeRate.constructFromObject(instance);
                        }
                    } else {
                        this.actualInstance = EvmEip1559FeeRate.constructFromObject(instance);
                    }
                }

            }
            match++;
        } catch(err) {
            // json data failed to deserialize into EvmEip1559FeeRate
            errorMessages.push("Failed to construct EvmEip1559FeeRate: " + err)
        }

        try {
            if (instance instanceof EvmLegacyFeeRate) {
                this.actualInstance = instance;
            } else if(!!EvmLegacyFeeRate.validateJSON && EvmLegacyFeeRate.validateJSON(instance)){
                // plain JS object
                // create EvmLegacyFeeRate from JS object
                this.actualInstance = EvmLegacyFeeRate.constructFromObject(instance);
            } else {
                if(EvmLegacyFeeRate.constructFromObject(instance)) {
                    if (!!EvmLegacyFeeRate.constructFromObject(instance).toJSON) {
                        if (EvmLegacyFeeRate.constructFromObject(instance).toJSON()) {
                            this.actualInstance = EvmLegacyFeeRate.constructFromObject(instance);
                        }
                    } else {
                        this.actualInstance = EvmLegacyFeeRate.constructFromObject(instance);
                    }
                }

            }
            match++;
        } catch(err) {
            // json data failed to deserialize into EvmLegacyFeeRate
            errorMessages.push("Failed to construct EvmLegacyFeeRate: " + err)
        }

        try {
            if (instance instanceof UtxoFeeRate) {
                this.actualInstance = instance;
            } else if(!!UtxoFeeRate.validateJSON && UtxoFeeRate.validateJSON(instance)){
                // plain JS object
                // create UtxoFeeRate from JS object
                this.actualInstance = UtxoFeeRate.constructFromObject(instance);
            } else {
                if(UtxoFeeRate.constructFromObject(instance)) {
                    if (!!UtxoFeeRate.constructFromObject(instance).toJSON) {
                        if (UtxoFeeRate.constructFromObject(instance).toJSON()) {
                            this.actualInstance = UtxoFeeRate.constructFromObject(instance);
                        }
                    } else {
                        this.actualInstance = UtxoFeeRate.constructFromObject(instance);
                    }
                }

            }
            match++;
        } catch(err) {
            // json data failed to deserialize into UtxoFeeRate
            errorMessages.push("Failed to construct UtxoFeeRate: " + err)
        }

        // if (match > 1) {
        //    throw new Error("Multiple matches found constructing `FeeRate` with oneOf schemas EvmEip1559FeeRate, EvmLegacyFeeRate, FixedFeeRate, UtxoFeeRate. Input: " + JSON.stringify(instance));
        // } else
        if (match === 0) {
        //    this.actualInstance = null; // clear the actual instance in case there are multiple matches
        //    throw new Error("No match found constructing `FeeRate` with oneOf schemas EvmEip1559FeeRate, EvmLegacyFeeRate, FixedFeeRate, UtxoFeeRate. Details: " +
        //                    errorMessages.join(", "));
        return;
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>FeeRate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FeeRate} obj Optional instance to populate.
     * @return {module:model/FeeRate} The populated <code>FeeRate</code> instance.
     */
    static constructFromObject(data, obj) {
        return new FeeRate(data);
    }

    /**
     * Gets the actual instance, which can be <code>EvmEip1559FeeRate</code>, <code>EvmLegacyFeeRate</code>, <code>FixedFeeRate</code>, <code>UtxoFeeRate</code>.
     * @return {(module:model/EvmEip1559FeeRate|module:model/EvmLegacyFeeRate|module:model/FixedFeeRate|module:model/UtxoFeeRate)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>EvmEip1559FeeRate</code>, <code>EvmLegacyFeeRate</code>, <code>FixedFeeRate</code>, <code>UtxoFeeRate</code>.
     * @param {(module:model/EvmEip1559FeeRate|module:model/EvmLegacyFeeRate|module:model/FixedFeeRate|module:model/UtxoFeeRate)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = FeeRate.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of FeeRate from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/FeeRate} An instance of FeeRate.
     */
    static fromJSON = function(json_string){
        return FeeRate.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/FeeType} fee_type
 */
FeeRate.prototype['fee_type'] = undefined;

/**
 * The token ID of the transaction fee.
 * @member {String} token_id
 */
FeeRate.prototype['token_id'] = undefined;

/**
 * The transaction fee that you need to pay for the transaction.
 * @member {String} fee_amount
 */
FeeRate.prototype['fee_amount'] = undefined;

/**
 * @member {module:model/UtxoFeeBasePrice} slow
 */
FeeRate.prototype['slow'] = undefined;

/**
 * @member {module:model/UtxoFeeBasePrice} recommended
 */
FeeRate.prototype['recommended'] = undefined;

/**
 * @member {module:model/UtxoFeeBasePrice} fast
 */
FeeRate.prototype['fast'] = undefined;


FeeRate.OneOf = ["EvmEip1559FeeRate", "EvmLegacyFeeRate", "FixedFeeRate", "UtxoFeeRate"];

export default FeeRate;

