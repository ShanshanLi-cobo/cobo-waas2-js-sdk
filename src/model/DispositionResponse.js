/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DispositionStatus from './DispositionStatus';

/**
 * The DispositionResponse model module.
 * @module model/DispositionResponse
 */
class DispositionResponse {
    /**
     * Constructs a new <code>DispositionResponse</code>.
     * The response for a disposition request.
     * @alias module:model/DispositionResponse
     * @param transaction_id {String} The UUID of the transaction being processed for disposition.
     * @param status {module:model/DispositionStatus} 
     */
    constructor(transaction_id, status) { 
        
        DispositionResponse.initialize(this, transaction_id, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, transaction_id, status) { 
        obj['transaction_id'] = transaction_id;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>DispositionResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DispositionResponse} obj Optional instance to populate.
     * @return {module:model/DispositionResponse} The populated <code>DispositionResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DispositionResponse();

            if (data.hasOwnProperty('transaction_id')) {
                obj['transaction_id'] = ApiClient.convertToType(data['transaction_id'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = DispositionStatus.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DispositionResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DispositionResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DispositionResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['transaction_id'] && !(typeof data['transaction_id'] === 'string' || data['transaction_id'] instanceof String)) {
            throw new Error("Expected the field `transaction_id` to be a primitive type in the JSON string but got " + data['transaction_id']);
        }

        return true;
    }


}

DispositionResponse.RequiredProperties = ["transaction_id", "status"];

/**
 * The UUID of the transaction being processed for disposition.
 * @member {String} transaction_id
 */
DispositionResponse.prototype['transaction_id'] = undefined;

/**
 * @member {module:model/DispositionStatus} status
 */
DispositionResponse.prototype['status'] = undefined;






export default DispositionResponse;

