/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SwapSingingStatus from './SwapSingingStatus';

/**
 * The SwapActivitySigners model module.
 * @module model/SwapActivitySigners
 */
class SwapActivitySigners {
    /**
     * Constructs a new <code>SwapActivitySigners</code>.
     * The signer information of the swap activity.
     * @alias module:model/SwapActivitySigners
     */
    constructor() { 
        
        SwapActivitySigners.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SwapActivitySigners</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SwapActivitySigners} obj Optional instance to populate.
     * @return {module:model/SwapActivitySigners} The populated <code>SwapActivitySigners</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SwapActivitySigners();

            if (data.hasOwnProperty('signer')) {
                obj['signer'] = ApiClient.convertToType(data['signer'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = SwapSingingStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('failed_reason')) {
                obj['failed_reason'] = ApiClient.convertToType(data['failed_reason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SwapActivitySigners</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SwapActivitySigners</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['signer'] && !(typeof data['signer'] === 'string' || data['signer'] instanceof String)) {
            throw new Error("Expected the field `signer` to be a primitive type in the JSON string but got " + data['signer']);
        }
        // ensure the json data is a string
        if (data['failed_reason'] && !(typeof data['failed_reason'] === 'string' || data['failed_reason'] instanceof String)) {
            throw new Error("Expected the field `failed_reason` to be a primitive type in the JSON string but got " + data['failed_reason']);
        }

        return true;
    }


}



/**
 * The signer name.
 * @member {String} signer
 */
SwapActivitySigners.prototype['signer'] = undefined;

/**
 * @member {module:model/SwapSingingStatus} status
 */
SwapActivitySigners.prototype['status'] = undefined;

/**
 * The reason for the signing failure.
 * @member {String} failed_reason
 */
SwapActivitySigners.prototype['failed_reason'] = undefined;






export default SwapActivitySigners;

