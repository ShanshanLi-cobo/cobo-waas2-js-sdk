/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApprovalTemplate model module.
 * @module model/ApprovalTemplate
 */
class ApprovalTemplate {
    /**
     * Constructs a new <code>ApprovalTemplate</code>.
     * The template for transaction approval details.
     * @alias module:model/ApprovalTemplate
     */
    constructor() { 
        
        ApprovalTemplate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApprovalTemplate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApprovalTemplate} obj Optional instance to populate.
     * @return {module:model/ApprovalTemplate} The populated <code>ApprovalTemplate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApprovalTemplate();

            if (data.hasOwnProperty('business_key')) {
                obj['business_key'] = ApiClient.convertToType(data['business_key'], 'String');
            }
            if (data.hasOwnProperty('template_text')) {
                obj['template_text'] = ApiClient.convertToType(data['template_text'], 'String');
            }
            if (data.hasOwnProperty('template_version')) {
                obj['template_version'] = ApiClient.convertToType(data['template_version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApprovalTemplate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApprovalTemplate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['business_key'] && !(typeof data['business_key'] === 'string' || data['business_key'] instanceof String)) {
            throw new Error("Expected the field `business_key` to be a primitive type in the JSON string but got " + data['business_key']);
        }
        // ensure the json data is a string
        if (data['template_text'] && !(typeof data['template_text'] === 'string' || data['template_text'] instanceof String)) {
            throw new Error("Expected the field `template_text` to be a primitive type in the JSON string but got " + data['template_text']);
        }
        // ensure the json data is a string
        if (data['template_version'] && !(typeof data['template_version'] === 'string' || data['template_version'] instanceof String)) {
            throw new Error("Expected the field `template_version` to be a primitive type in the JSON string but got " + data['template_version']);
        }

        return true;
    }


}



/**
 * The business key that is used to identify the transaction.
 * @member {String} business_key
 */
ApprovalTemplate.prototype['business_key'] = undefined;

/**
 * The template text that is used for the transaction approval.
 * @member {String} template_text
 */
ApprovalTemplate.prototype['template_text'] = undefined;

/**
 * The version of the template used for the transaction approval.
 * @member {String} template_version
 */
ApprovalTemplate.prototype['template_version'] = undefined;






export default ApprovalTemplate;

