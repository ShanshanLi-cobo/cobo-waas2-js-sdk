/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PolicyActionContent model module.
 * @module model/PolicyActionContent
 */
class PolicyActionContent {
    /**
     * Constructs a new <code>PolicyActionContent</code>.
     * The information of an app workflow policy quorum action content.
     * @alias module:model/PolicyActionContent
     * @param type {module:model/PolicyActionContent.TypeEnum} The quorum action content type. Possible values include:    - `FULL_APPROVAL`: The content type is approved by all persons.   - `PART_APPROVAL`: The content type is approved by some persons. 
     */
    constructor(type) { 
        
        PolicyActionContent.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['type'] = type;
    }

    /**
     * Constructs a <code>PolicyActionContent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PolicyActionContent} obj Optional instance to populate.
     * @return {module:model/PolicyActionContent} The populated <code>PolicyActionContent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PolicyActionContent();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('roles')) {
                obj['roles'] = ApiClient.convertToType(data['roles'], ['String']);
            }
            if (data.hasOwnProperty('user_ids')) {
                obj['user_ids'] = ApiClient.convertToType(data['user_ids'], ['String']);
            }
            if (data.hasOwnProperty('threshold')) {
                obj['threshold'] = ApiClient.convertToType(data['threshold'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PolicyActionContent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PolicyActionContent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PolicyActionContent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['roles'])) {
            throw new Error("Expected the field `roles` to be an array in the JSON data but got " + data['roles']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['user_ids'])) {
            throw new Error("Expected the field `user_ids` to be an array in the JSON data but got " + data['user_ids']);
        }

        return true;
    }


}

PolicyActionContent.RequiredProperties = ["type"];

/**
 * The quorum action content type. Possible values include:    - `FULL_APPROVAL`: The content type is approved by all persons.   - `PART_APPROVAL`: The content type is approved by some persons. 
 * @member {module:model/PolicyActionContent.TypeEnum} type
 */
PolicyActionContent.prototype['type'] = undefined;

/**
 * @member {Array.<String>} roles
 */
PolicyActionContent.prototype['roles'] = undefined;

/**
 * @member {Array.<String>} user_ids
 */
PolicyActionContent.prototype['user_ids'] = undefined;

/**
 * The number of persons need approved, such as 2.
 * @member {Number} threshold
 */
PolicyActionContent.prototype['threshold'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
PolicyActionContent['TypeEnum'] = {

    /**
     * value: "FULL_APPROVAL"
     * @const
     */
    "FULL_APPROVAL": "FULL_APPROVAL",

    /**
     * value: "PART_APPROVAL"
     * @const
     */
    "PART_APPROVAL": "PART_APPROVAL",

    /**
     * value: "unknown_default_open_api"
     * @const
     */
    "unknown_default_open_api": "unknown_default_open_api"
};



export default PolicyActionContent;

