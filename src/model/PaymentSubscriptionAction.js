/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PaymentSubscriptionActionData from './PaymentSubscriptionActionData';
import PaymentSubscriptionActionStatus from './PaymentSubscriptionActionStatus';

/**
 * The PaymentSubscriptionAction model module.
 * @module model/PaymentSubscriptionAction
 */
class PaymentSubscriptionAction {
    /**
     * Constructs a new <code>PaymentSubscriptionAction</code>.
     * @alias module:model/PaymentSubscriptionAction
     * @param request_id {String} The action request id.
     * @param subscription_action_id {String} The action id.
     * @param plan_id {String} The plan id in cobo.
     * @param subscription_id {String} The subscription id in cobo.
     * @param merchant_id {String} The merchant id in cobo.
     * @param merchant_address {String} The merchant address in cobo.
     * @param data {module:model/PaymentSubscriptionActionData} 
     * @param status {module:model/PaymentSubscriptionActionStatus} 
     */
    constructor(request_id, subscription_action_id, plan_id, subscription_id, merchant_id, merchant_address, data, status) { 
        
        PaymentSubscriptionAction.initialize(this, request_id, subscription_action_id, plan_id, subscription_id, merchant_id, merchant_address, data, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, request_id, subscription_action_id, plan_id, subscription_id, merchant_id, merchant_address, data, status) { 
        obj['request_id'] = request_id;
        obj['subscription_action_id'] = subscription_action_id;
        obj['plan_id'] = plan_id;
        obj['subscription_id'] = subscription_id;
        obj['merchant_id'] = merchant_id;
        obj['merchant_address'] = merchant_address;
        obj['data'] = data;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>PaymentSubscriptionAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentSubscriptionAction} obj Optional instance to populate.
     * @return {module:model/PaymentSubscriptionAction} The populated <code>PaymentSubscriptionAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentSubscriptionAction();

            if (data.hasOwnProperty('request_id')) {
                obj['request_id'] = ApiClient.convertToType(data['request_id'], 'String');
            }
            if (data.hasOwnProperty('subscription_action_id')) {
                obj['subscription_action_id'] = ApiClient.convertToType(data['subscription_action_id'], 'String');
            }
            if (data.hasOwnProperty('plan_id')) {
                obj['plan_id'] = ApiClient.convertToType(data['plan_id'], 'String');
            }
            if (data.hasOwnProperty('subscription_id')) {
                obj['subscription_id'] = ApiClient.convertToType(data['subscription_id'], 'String');
            }
            if (data.hasOwnProperty('merchant_id')) {
                obj['merchant_id'] = ApiClient.convertToType(data['merchant_id'], 'String');
            }
            if (data.hasOwnProperty('merchant_address')) {
                obj['merchant_address'] = ApiClient.convertToType(data['merchant_address'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = PaymentSubscriptionActionData.constructFromObject(data['data']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = PaymentSubscriptionActionStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('created_timestamp')) {
                obj['created_timestamp'] = ApiClient.convertToType(data['created_timestamp'], 'Number');
            }
            if (data.hasOwnProperty('updated_timestamp')) {
                obj['updated_timestamp'] = ApiClient.convertToType(data['updated_timestamp'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaymentSubscriptionAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaymentSubscriptionAction</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PaymentSubscriptionAction.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['request_id'] && !(typeof data['request_id'] === 'string' || data['request_id'] instanceof String)) {
            throw new Error("Expected the field `request_id` to be a primitive type in the JSON string but got " + data['request_id']);
        }
        // ensure the json data is a string
        if (data['subscription_action_id'] && !(typeof data['subscription_action_id'] === 'string' || data['subscription_action_id'] instanceof String)) {
            throw new Error("Expected the field `subscription_action_id` to be a primitive type in the JSON string but got " + data['subscription_action_id']);
        }
        // ensure the json data is a string
        if (data['plan_id'] && !(typeof data['plan_id'] === 'string' || data['plan_id'] instanceof String)) {
            throw new Error("Expected the field `plan_id` to be a primitive type in the JSON string but got " + data['plan_id']);
        }
        // ensure the json data is a string
        if (data['subscription_id'] && !(typeof data['subscription_id'] === 'string' || data['subscription_id'] instanceof String)) {
            throw new Error("Expected the field `subscription_id` to be a primitive type in the JSON string but got " + data['subscription_id']);
        }
        // ensure the json data is a string
        if (data['merchant_id'] && !(typeof data['merchant_id'] === 'string' || data['merchant_id'] instanceof String)) {
            throw new Error("Expected the field `merchant_id` to be a primitive type in the JSON string but got " + data['merchant_id']);
        }
        // ensure the json data is a string
        if (data['merchant_address'] && !(typeof data['merchant_address'] === 'string' || data['merchant_address'] instanceof String)) {
            throw new Error("Expected the field `merchant_address` to be a primitive type in the JSON string but got " + data['merchant_address']);
        }
        // validate the optional field `data`
        if (data['data']) { // data not null
          if (!!PaymentSubscriptionActionData.validateJSON) {
            PaymentSubscriptionActionData.validateJSON(data['data']);
          }
        }

        return true;
    }


}

PaymentSubscriptionAction.RequiredProperties = ["request_id", "subscription_action_id", "plan_id", "subscription_id", "merchant_id", "merchant_address", "data", "status"];

/**
 * The action request id.
 * @member {String} request_id
 */
PaymentSubscriptionAction.prototype['request_id'] = undefined;

/**
 * The action id.
 * @member {String} subscription_action_id
 */
PaymentSubscriptionAction.prototype['subscription_action_id'] = undefined;

/**
 * The plan id in cobo.
 * @member {String} plan_id
 */
PaymentSubscriptionAction.prototype['plan_id'] = undefined;

/**
 * The subscription id in cobo.
 * @member {String} subscription_id
 */
PaymentSubscriptionAction.prototype['subscription_id'] = undefined;

/**
 * The merchant id in cobo.
 * @member {String} merchant_id
 */
PaymentSubscriptionAction.prototype['merchant_id'] = undefined;

/**
 * The merchant address in cobo.
 * @member {String} merchant_address
 */
PaymentSubscriptionAction.prototype['merchant_address'] = undefined;

/**
 * @member {module:model/PaymentSubscriptionActionData} data
 */
PaymentSubscriptionAction.prototype['data'] = undefined;

/**
 * @member {module:model/PaymentSubscriptionActionStatus} status
 */
PaymentSubscriptionAction.prototype['status'] = undefined;

/**
 * The created time of the subscription action, represented as a UNIX timestamp in seconds.
 * @member {Number} created_timestamp
 */
PaymentSubscriptionAction.prototype['created_timestamp'] = undefined;

/**
 * The updated time of the subscription action, represented as a UNIX timestamp in seconds.
 * @member {Number} updated_timestamp
 */
PaymentSubscriptionAction.prototype['updated_timestamp'] = undefined;






export default PaymentSubscriptionAction;

