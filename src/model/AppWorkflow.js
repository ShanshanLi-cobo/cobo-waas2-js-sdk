/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AppWorkflowPolicy from './AppWorkflowPolicy';

/**
 * The AppWorkflow model module.
 * @module model/AppWorkflow
 */
class AppWorkflow {
    /**
     * Constructs a new <code>AppWorkflow</code>.
     * The information of an app workflow approval user entry.
     * @alias module:model/AppWorkflow
     * @param workflow_id {String} The workflow id.
     * @param operation_id {String} The workflow operation id.
     * @param operation_name {String} The workflow operation name.
     * @param current_policies {Array.<module:model/AppWorkflowPolicy>} 
     */
    constructor(workflow_id, operation_id, operation_name, current_policies) { 
        
        AppWorkflow.initialize(this, workflow_id, operation_id, operation_name, current_policies);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, workflow_id, operation_id, operation_name, current_policies) { 
        obj['workflow_id'] = workflow_id;
        obj['operation_id'] = operation_id;
        obj['operation_name'] = operation_name;
        obj['current_policies'] = current_policies;
    }

    /**
     * Constructs a <code>AppWorkflow</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppWorkflow} obj Optional instance to populate.
     * @return {module:model/AppWorkflow} The populated <code>AppWorkflow</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppWorkflow();

            if (data.hasOwnProperty('workflow_id')) {
                obj['workflow_id'] = ApiClient.convertToType(data['workflow_id'], 'String');
            }
            if (data.hasOwnProperty('operation_id')) {
                obj['operation_id'] = ApiClient.convertToType(data['operation_id'], 'String');
            }
            if (data.hasOwnProperty('operation_name')) {
                obj['operation_name'] = ApiClient.convertToType(data['operation_name'], 'String');
            }
            if (data.hasOwnProperty('current_policies')) {
                obj['current_policies'] = ApiClient.convertToType(data['current_policies'], [AppWorkflowPolicy]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppWorkflow</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppWorkflow</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AppWorkflow.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['workflow_id'] && !(typeof data['workflow_id'] === 'string' || data['workflow_id'] instanceof String)) {
            throw new Error("Expected the field `workflow_id` to be a primitive type in the JSON string but got " + data['workflow_id']);
        }
        // ensure the json data is a string
        if (data['operation_id'] && !(typeof data['operation_id'] === 'string' || data['operation_id'] instanceof String)) {
            throw new Error("Expected the field `operation_id` to be a primitive type in the JSON string but got " + data['operation_id']);
        }
        // ensure the json data is a string
        if (data['operation_name'] && !(typeof data['operation_name'] === 'string' || data['operation_name'] instanceof String)) {
            throw new Error("Expected the field `operation_name` to be a primitive type in the JSON string but got " + data['operation_name']);
        }
        if (data['current_policies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['current_policies'])) {
                throw new Error("Expected the field `current_policies` to be an array in the JSON data but got " + data['current_policies']);
            }
            // validate the optional field `current_policies` (array)
            for (const item of data['current_policies']) {
                AppWorkflowPolicy.validateJSON(item);
            };
        }

        return true;
    }


}

AppWorkflow.RequiredProperties = ["workflow_id", "operation_id", "operation_name", "current_policies"];

/**
 * The workflow id.
 * @member {String} workflow_id
 */
AppWorkflow.prototype['workflow_id'] = undefined;

/**
 * The workflow operation id.
 * @member {String} operation_id
 */
AppWorkflow.prototype['operation_id'] = undefined;

/**
 * The workflow operation name.
 * @member {String} operation_name
 */
AppWorkflow.prototype['operation_name'] = undefined;

/**
 * @member {Array.<module:model/AppWorkflowPolicy>} current_policies
 */
AppWorkflow.prototype['current_policies'] = undefined;






export default AppWorkflow;

