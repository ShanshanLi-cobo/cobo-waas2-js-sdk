/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PolicyActionContent from './PolicyActionContent';
import PolicyActionType from './PolicyActionType';

/**
 * The PolicyAction model module.
 * @module model/PolicyAction
 */
class PolicyAction {
    /**
     * Constructs a new <code>PolicyAction</code>.
     * The information of an app workflow policy action, content is valuable when action_type is Quorum.
     * @alias module:model/PolicyAction
     * @param action_type {module:model/PolicyActionType} 
     */
    constructor(action_type) { 
        
        PolicyAction.initialize(this, action_type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action_type) { 
        obj['action_type'] = action_type;
    }

    /**
     * Constructs a <code>PolicyAction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PolicyAction} obj Optional instance to populate.
     * @return {module:model/PolicyAction} The populated <code>PolicyAction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PolicyAction();

            if (data.hasOwnProperty('action_type')) {
                obj['action_type'] = PolicyActionType.constructFromObject(data['action_type']);
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = PolicyActionContent.constructFromObject(data['content']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PolicyAction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PolicyAction</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PolicyAction.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `content`
        if (data['content']) { // data not null
          if (!!PolicyActionContent.validateJSON) {
            PolicyActionContent.validateJSON(data['content']);
          }
        }

        return true;
    }


}

PolicyAction.RequiredProperties = ["action_type"];

/**
 * @member {module:model/PolicyActionType} action_type
 */
PolicyAction.prototype['action_type'] = undefined;

/**
 * @member {module:model/PolicyActionContent} content
 */
PolicyAction.prototype['content'] = undefined;






export default PolicyAction;

