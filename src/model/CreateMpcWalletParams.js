/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateCustodialWalletParams from './CreateCustodialWalletParams';
import WalletSubtype from './WalletSubtype';
import WalletType from './WalletType';

/**
 * The CreateMpcWalletParams model module.
 * @module model/CreateMpcWalletParams
 */
class CreateMpcWalletParams {
    /**
     * Constructs a new <code>CreateMpcWalletParams</code>.
     * @alias module:model/CreateMpcWalletParams
     * @implements module:model/CreateCustodialWalletParams
     * @param name {String} The wallet name.
     * @param wallet_type {module:model/WalletType} 
     * @param wallet_subtype {module:model/WalletSubtype} 
     * @param vault_id {String} The ID of the owning vault. You can call [List all vaults](https://www.cobo.com/developers/v2/api-references/wallets--mpc-wallets/list-all-vaults) to retrieve all vault IDs under your organization.
     */
    constructor(name, wallet_type, wallet_subtype, vault_id) { 
        CreateCustodialWalletParams.initialize(this, name, wallet_type, wallet_subtype);
        CreateMpcWalletParams.initialize(this, name, wallet_type, wallet_subtype, vault_id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, wallet_type, wallet_subtype, vault_id) { 
        obj['name'] = name;
        obj['wallet_type'] = wallet_type;
        obj['wallet_subtype'] = wallet_subtype;
        obj['vault_id'] = vault_id;
    }

    /**
     * Constructs a <code>CreateMpcWalletParams</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateMpcWalletParams} obj Optional instance to populate.
     * @return {module:model/CreateMpcWalletParams} The populated <code>CreateMpcWalletParams</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateMpcWalletParams();
            CreateCustodialWalletParams.constructFromObject(data, obj);

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('wallet_type')) {
                obj['wallet_type'] = WalletType.constructFromObject(data['wallet_type']);
            }
            if (data.hasOwnProperty('wallet_subtype')) {
                obj['wallet_subtype'] = WalletSubtype.constructFromObject(data['wallet_subtype']);
            }
            if (data.hasOwnProperty('enable_auto_sweep')) {
                obj['enable_auto_sweep'] = ApiClient.convertToType(data['enable_auto_sweep'], 'Boolean');
            }
            if (data.hasOwnProperty('vault_id')) {
                obj['vault_id'] = ApiClient.convertToType(data['vault_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateMpcWalletParams</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateMpcWalletParams</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateMpcWalletParams.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['vault_id'] && !(typeof data['vault_id'] === 'string' || data['vault_id'] instanceof String)) {
            throw new Error("Expected the field `vault_id` to be a primitive type in the JSON string but got " + data['vault_id']);
        }

        return true;
    }


}

CreateMpcWalletParams.RequiredProperties = ["name", "wallet_type", "wallet_subtype", "vault_id"];

/**
 * The wallet name.
 * @member {String} name
 */
CreateMpcWalletParams.prototype['name'] = undefined;

/**
 * @member {module:model/WalletType} wallet_type
 */
CreateMpcWalletParams.prototype['wallet_type'] = undefined;

/**
 * @member {module:model/WalletSubtype} wallet_subtype
 */
CreateMpcWalletParams.prototype['wallet_subtype'] = undefined;

/**
 * Enable the auto sweep feature for the wallet. This parameter only applies to MPC and Web3 wallets.
 * @member {Boolean} enable_auto_sweep
 */
CreateMpcWalletParams.prototype['enable_auto_sweep'] = undefined;

/**
 * The ID of the owning vault. You can call [List all vaults](https://www.cobo.com/developers/v2/api-references/wallets--mpc-wallets/list-all-vaults) to retrieve all vault IDs under your organization.
 * @member {String} vault_id
 */
CreateMpcWalletParams.prototype['vault_id'] = undefined;


// Implement CreateCustodialWalletParams interface:
/**
 * The wallet name.
 * @member {String} name
 */
CreateCustodialWalletParams.prototype['name'] = undefined;
/**
 * @member {module:model/WalletType} wallet_type
 */
CreateCustodialWalletParams.prototype['wallet_type'] = undefined;
/**
 * @member {module:model/WalletSubtype} wallet_subtype
 */
CreateCustodialWalletParams.prototype['wallet_subtype'] = undefined;
/**
 * Enable the auto sweep feature for the wallet. This parameter only applies to MPC and Web3 wallets.
 * @member {Boolean} enable_auto_sweep
 */
CreateCustodialWalletParams.prototype['enable_auto_sweep'] = undefined;




export default CreateMpcWalletParams;

