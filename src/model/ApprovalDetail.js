/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RoleDetail from './RoleDetail';

/**
 * The ApprovalDetail model module.
 * @module model/ApprovalDetail
 */
class ApprovalDetail {
    /**
     * Constructs a new <code>ApprovalDetail</code>.
     * The approval detail data for transaction.
     * @alias module:model/ApprovalDetail
     */
    constructor() { 
        
        ApprovalDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApprovalDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApprovalDetail} obj Optional instance to populate.
     * @return {module:model/ApprovalDetail} The populated <code>ApprovalDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApprovalDetail();

            if (data.hasOwnProperty('transaction_id')) {
                obj['transaction_id'] = ApiClient.convertToType(data['transaction_id'], 'String');
            }
            if (data.hasOwnProperty('cobo_id')) {
                obj['cobo_id'] = ApiClient.convertToType(data['cobo_id'], 'String');
            }
            if (data.hasOwnProperty('request_id')) {
                obj['request_id'] = ApiClient.convertToType(data['request_id'], 'String');
            }
            if (data.hasOwnProperty('address_owner')) {
                obj['address_owner'] = RoleDetail.constructFromObject(data['address_owner']);
            }
            if (data.hasOwnProperty('spender')) {
                obj['spender'] = RoleDetail.constructFromObject(data['spender']);
            }
            if (data.hasOwnProperty('approver')) {
                obj['approver'] = RoleDetail.constructFromObject(data['approver']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApprovalDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApprovalDetail</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['transaction_id'] && !(typeof data['transaction_id'] === 'string' || data['transaction_id'] instanceof String)) {
            throw new Error("Expected the field `transaction_id` to be a primitive type in the JSON string but got " + data['transaction_id']);
        }
        // ensure the json data is a string
        if (data['cobo_id'] && !(typeof data['cobo_id'] === 'string' || data['cobo_id'] instanceof String)) {
            throw new Error("Expected the field `cobo_id` to be a primitive type in the JSON string but got " + data['cobo_id']);
        }
        // ensure the json data is a string
        if (data['request_id'] && !(typeof data['request_id'] === 'string' || data['request_id'] instanceof String)) {
            throw new Error("Expected the field `request_id` to be a primitive type in the JSON string but got " + data['request_id']);
        }
        // validate the optional field `address_owner`
        if (data['address_owner']) { // data not null
          if (!!RoleDetail.validateJSON) {
            RoleDetail.validateJSON(data['address_owner']);
          }
        }
        // validate the optional field `spender`
        if (data['spender']) { // data not null
          if (!!RoleDetail.validateJSON) {
            RoleDetail.validateJSON(data['spender']);
          }
        }
        // validate the optional field `approver`
        if (data['approver']) { // data not null
          if (!!RoleDetail.validateJSON) {
            RoleDetail.validateJSON(data['approver']);
          }
        }

        return true;
    }


}



/**
 * The transaction ID.
 * @member {String} transaction_id
 */
ApprovalDetail.prototype['transaction_id'] = undefined;

/**
 * The Cobo ID, which can be used to track a transaction.
 * @member {String} cobo_id
 */
ApprovalDetail.prototype['cobo_id'] = undefined;

/**
 * The request ID that is used to track a transaction request. The request ID is provided by you and must be unique within your organization.
 * @member {String} request_id
 */
ApprovalDetail.prototype['request_id'] = undefined;

/**
 * @member {module:model/RoleDetail} address_owner
 */
ApprovalDetail.prototype['address_owner'] = undefined;

/**
 * @member {module:model/RoleDetail} spender
 */
ApprovalDetail.prototype['spender'] = undefined;

/**
 * @member {module:model/RoleDetail} approver
 */
ApprovalDetail.prototype['approver'] = undefined;






export default ApprovalDetail;

