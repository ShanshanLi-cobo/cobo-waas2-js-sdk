/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddressInfo from './AddressInfo';
import TransactionExtraType from './TransactionExtraType';

/**
 * The TransactionBabylonBusinessInfo model module.
 * @module model/TransactionBabylonBusinessInfo
 */
class TransactionBabylonBusinessInfo {
    /**
     * Constructs a new <code>TransactionBabylonBusinessInfo</code>.
     * The Babylon business information.
     * @alias module:model/TransactionBabylonBusinessInfo
     * @param extra_type {module:model/TransactionExtraType} 
     */
    constructor(extra_type) { 
        
        TransactionBabylonBusinessInfo.initialize(this, extra_type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, extra_type) { 
        obj['extra_type'] = extra_type;
    }

    /**
     * Constructs a <code>TransactionBabylonBusinessInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionBabylonBusinessInfo} obj Optional instance to populate.
     * @return {module:model/TransactionBabylonBusinessInfo} The populated <code>TransactionBabylonBusinessInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionBabylonBusinessInfo();

            if (data.hasOwnProperty('extra_type')) {
                obj['extra_type'] = TransactionExtraType.constructFromObject(data['extra_type']);
            }
            if (data.hasOwnProperty('babylon_address_info')) {
                obj['babylon_address_info'] = AddressInfo.constructFromObject(data['babylon_address_info']);
            }
            if (data.hasOwnProperty('btc_address_info')) {
                obj['btc_address_info'] = AddressInfo.constructFromObject(data['btc_address_info']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransactionBabylonBusinessInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransactionBabylonBusinessInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransactionBabylonBusinessInfo.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `babylon_address_info`
        if (data['babylon_address_info']) { // data not null
          if (!!AddressInfo.validateJSON) {
            AddressInfo.validateJSON(data['babylon_address_info']);
          }
        }
        // validate the optional field `btc_address_info`
        if (data['btc_address_info']) { // data not null
          if (!!AddressInfo.validateJSON) {
            AddressInfo.validateJSON(data['btc_address_info']);
          }
        }

        return true;
    }


}

TransactionBabylonBusinessInfo.RequiredProperties = ["extra_type"];

/**
 * @member {module:model/TransactionExtraType} extra_type
 */
TransactionBabylonBusinessInfo.prototype['extra_type'] = undefined;

/**
 * @member {module:model/AddressInfo} babylon_address_info
 */
TransactionBabylonBusinessInfo.prototype['babylon_address_info'] = undefined;

/**
 * @member {module:model/AddressInfo} btc_address_info
 */
TransactionBabylonBusinessInfo.prototype['btc_address_info'] = undefined;






export default TransactionBabylonBusinessInfo;

