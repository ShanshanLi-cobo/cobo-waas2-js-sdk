/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContractCallDestinationType from './ContractCallDestinationType';
import SolContractCallAddressLookupTableAccount from './SolContractCallAddressLookupTableAccount';
import SolContractCallInstruction from './SolContractCallInstruction';

/**
 * The SolContractCallDestination model module.
 * @module model/SolContractCallDestination
 */
class SolContractCallDestination {
    /**
     * Constructs a new <code>SolContractCallDestination</code>.
     * The information about the transaction destination. Refer to [Transaction sources and destinations](https://www.cobo.com/developers/v2/guides/transactions/sources-and-destinations) for a detailed introduction about the supported sources and destinations for each transaction type.
     * @alias module:model/SolContractCallDestination
     * @param destination_type {module:model/ContractCallDestinationType} 
     * @param instructions {Array.<module:model/SolContractCallInstruction>} 
     */
    constructor(destination_type, instructions) { 
        
        SolContractCallDestination.initialize(this, destination_type, instructions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, destination_type, instructions) { 
        obj['destination_type'] = destination_type;
        obj['instructions'] = instructions;
    }

    /**
     * Constructs a <code>SolContractCallDestination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SolContractCallDestination} obj Optional instance to populate.
     * @return {module:model/SolContractCallDestination} The populated <code>SolContractCallDestination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SolContractCallDestination();

            if (data.hasOwnProperty('destination_type')) {
                obj['destination_type'] = ContractCallDestinationType.constructFromObject(data['destination_type']);
            }
            if (data.hasOwnProperty('instructions')) {
                obj['instructions'] = ApiClient.convertToType(data['instructions'], [SolContractCallInstruction]);
            }
            if (data.hasOwnProperty('address_lookup_table_accounts')) {
                obj['address_lookup_table_accounts'] = ApiClient.convertToType(data['address_lookup_table_accounts'], [SolContractCallAddressLookupTableAccount]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SolContractCallDestination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SolContractCallDestination</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SolContractCallDestination.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['instructions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['instructions'])) {
                throw new Error("Expected the field `instructions` to be an array in the JSON data but got " + data['instructions']);
            }
            // validate the optional field `instructions` (array)
            for (const item of data['instructions']) {
                SolContractCallInstruction.validateJSON(item);
            };
        }
        if (data['address_lookup_table_accounts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['address_lookup_table_accounts'])) {
                throw new Error("Expected the field `address_lookup_table_accounts` to be an array in the JSON data but got " + data['address_lookup_table_accounts']);
            }
            // validate the optional field `address_lookup_table_accounts` (array)
            for (const item of data['address_lookup_table_accounts']) {
                SolContractCallAddressLookupTableAccount.validateJSON(item);
            };
        }

        return true;
    }


}

SolContractCallDestination.RequiredProperties = ["destination_type", "instructions"];

/**
 * @member {module:model/ContractCallDestinationType} destination_type
 */
SolContractCallDestination.prototype['destination_type'] = undefined;

/**
 * @member {Array.<module:model/SolContractCallInstruction>} instructions
 */
SolContractCallDestination.prototype['instructions'] = undefined;

/**
 * @member {Array.<module:model/SolContractCallAddressLookupTableAccount>} address_lookup_table_accounts
 */
SolContractCallDestination.prototype['address_lookup_table_accounts'] = undefined;






export default SolContractCallDestination;

