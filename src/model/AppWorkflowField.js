/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PolicyFieldValueType from './PolicyFieldValueType';

/**
 * The AppWorkflowField model module.
 * @module model/AppWorkflowField
 */
class AppWorkflowField {
    /**
     * Constructs a new <code>AppWorkflowField</code>.
     * The information of an app workflow field.
     * @alias module:model/AppWorkflowField
     * @param field {String} The app workflow field name.
     * @param value_type {module:model/PolicyFieldValueType} 
     * @param value {String} The app workflow field value.
     */
    constructor(field, value_type, value) { 
        
        AppWorkflowField.initialize(this, field, value_type, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, field, value_type, value) { 
        obj['field'] = field;
        obj['value_type'] = value_type;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>AppWorkflowField</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppWorkflowField} obj Optional instance to populate.
     * @return {module:model/AppWorkflowField} The populated <code>AppWorkflowField</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppWorkflowField();

            if (data.hasOwnProperty('field')) {
                obj['field'] = ApiClient.convertToType(data['field'], 'String');
            }
            if (data.hasOwnProperty('value_type')) {
                obj['value_type'] = PolicyFieldValueType.constructFromObject(data['value_type']);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppWorkflowField</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppWorkflowField</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AppWorkflowField.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['field'] && !(typeof data['field'] === 'string' || data['field'] instanceof String)) {
            throw new Error("Expected the field `field` to be a primitive type in the JSON string but got " + data['field']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}

AppWorkflowField.RequiredProperties = ["field", "value_type", "value"];

/**
 * The app workflow field name.
 * @member {String} field
 */
AppWorkflowField.prototype['field'] = undefined;

/**
 * @member {module:model/PolicyFieldValueType} value_type
 */
AppWorkflowField.prototype['value_type'] = undefined;

/**
 * The app workflow field value.
 * @member {String} value
 */
AppWorkflowField.prototype['value'] = undefined;






export default AppWorkflowField;

