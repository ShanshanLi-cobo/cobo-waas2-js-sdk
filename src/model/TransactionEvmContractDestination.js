/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TransactionDestinationType from './TransactionDestinationType';
import TransactionEvmCalldataInfo from './TransactionEvmCalldataInfo';

/**
 * The TransactionEvmContractDestination model module.
 * @module model/TransactionEvmContractDestination
 */
class TransactionEvmContractDestination {
    /**
     * Constructs a new <code>TransactionEvmContractDestination</code>.
     * Information about the transaction destination type &#x60;EVM_Contract&#x60;. Refer to [Transaction sources and destinations](https://www.cobo.com/developers/v2/guides/transactions/sources-and-destinations) for a detailed introduction about the supported sources and destinations for each transaction type.  Switch between the tabs to display the properties for different transaction destinations. 
     * @alias module:model/TransactionEvmContractDestination
     * @param destination_type {module:model/TransactionDestinationType} 
     * @param address {String} The destination address.
     * @param calldata {String} The data that is used to invoke a specific function or method within the specified contract at the destination address. 
     */
    constructor(destination_type, address, calldata) { 
        
        TransactionEvmContractDestination.initialize(this, destination_type, address, calldata);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, destination_type, address, calldata) { 
        obj['destination_type'] = destination_type;
        obj['address'] = address;
        obj['calldata'] = calldata;
    }

    /**
     * Constructs a <code>TransactionEvmContractDestination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionEvmContractDestination} obj Optional instance to populate.
     * @return {module:model/TransactionEvmContractDestination} The populated <code>TransactionEvmContractDestination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionEvmContractDestination();

            if (data.hasOwnProperty('destination_type')) {
                obj['destination_type'] = TransactionDestinationType.constructFromObject(data['destination_type']);
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('calldata')) {
                obj['calldata'] = ApiClient.convertToType(data['calldata'], 'String');
            }
            if (data.hasOwnProperty('calldata_info')) {
                obj['calldata_info'] = TransactionEvmCalldataInfo.constructFromObject(data['calldata_info']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransactionEvmContractDestination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransactionEvmContractDestination</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TransactionEvmContractDestination.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }
        // ensure the json data is a string
        if (data['calldata'] && !(typeof data['calldata'] === 'string' || data['calldata'] instanceof String)) {
            throw new Error("Expected the field `calldata` to be a primitive type in the JSON string but got " + data['calldata']);
        }
        // validate the optional field `calldata_info`
        if (data['calldata_info']) { // data not null
          if (!!TransactionEvmCalldataInfo.validateJSON) {
            TransactionEvmCalldataInfo.validateJSON(data['calldata_info']);
          }
        }

        return true;
    }


}

TransactionEvmContractDestination.RequiredProperties = ["destination_type", "address", "calldata"];

/**
 * @member {module:model/TransactionDestinationType} destination_type
 */
TransactionEvmContractDestination.prototype['destination_type'] = undefined;

/**
 * The destination address.
 * @member {String} address
 */
TransactionEvmContractDestination.prototype['address'] = undefined;

/**
 * The transfer amount. For example, if you trade 1.5 ETH, then the value is `1.5`. 
 * @member {String} value
 */
TransactionEvmContractDestination.prototype['value'] = undefined;

/**
 * The data that is used to invoke a specific function or method within the specified contract at the destination address. 
 * @member {String} calldata
 */
TransactionEvmContractDestination.prototype['calldata'] = undefined;

/**
 * @member {module:model/TransactionEvmCalldataInfo} calldata_info
 */
TransactionEvmContractDestination.prototype['calldata_info'] = undefined;






export default TransactionEvmContractDestination;

