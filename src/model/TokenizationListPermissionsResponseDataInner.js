/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TokenizationTokenPermissionType from './TokenizationTokenPermissionType';

/**
 * The TokenizationListPermissionsResponseDataInner model module.
 * @module model/TokenizationListPermissionsResponseDataInner
 */
class TokenizationListPermissionsResponseDataInner {
    /**
     * Constructs a new <code>TokenizationListPermissionsResponseDataInner</code>.
     * @alias module:model/TokenizationListPermissionsResponseDataInner
     * @param address {String} The address with permissions.
     * @param permissions {Array.<module:model/TokenizationTokenPermissionType>} The permissions assigned to this address.
     */
    constructor(address, permissions) { 
        
        TokenizationListPermissionsResponseDataInner.initialize(this, address, permissions);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, address, permissions) { 
        obj['address'] = address;
        obj['permissions'] = permissions;
    }

    /**
     * Constructs a <code>TokenizationListPermissionsResponseDataInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TokenizationListPermissionsResponseDataInner} obj Optional instance to populate.
     * @return {module:model/TokenizationListPermissionsResponseDataInner} The populated <code>TokenizationListPermissionsResponseDataInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TokenizationListPermissionsResponseDataInner();

            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ApiClient.convertToType(data['permissions'], [TokenizationTokenPermissionType]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TokenizationListPermissionsResponseDataInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TokenizationListPermissionsResponseDataInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TokenizationListPermissionsResponseDataInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['permissions'])) {
            throw new Error("Expected the field `permissions` to be an array in the JSON data but got " + data['permissions']);
        }

        return true;
    }


}

TokenizationListPermissionsResponseDataInner.RequiredProperties = ["address", "permissions"];

/**
 * The address with permissions.
 * @member {String} address
 */
TokenizationListPermissionsResponseDataInner.prototype['address'] = undefined;

/**
 * The permissions assigned to this address.
 * @member {Array.<module:model/TokenizationTokenPermissionType>} permissions
 */
TokenizationListPermissionsResponseDataInner.prototype['permissions'] = undefined;






export default TokenizationListPermissionsResponseDataInner;

