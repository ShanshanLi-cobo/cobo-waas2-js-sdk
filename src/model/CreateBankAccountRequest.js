/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateBankAccountRequest model module.
 * @module model/CreateBankAccountRequest
 */
class CreateBankAccountRequest {
    /**
     * Constructs a new <code>CreateBankAccountRequest</code>.
     * @alias module:model/CreateBankAccountRequest
     * @param otc_bank_account_id {String} 
     * @param info {Object.<String, Object>} JSON-formatted bank account details. The object should include the following fields: - beneficiary_name: Name of the account holder - beneficiary_address: Address of the account holder - account_number: Bank account number - bank_name: Name of the bank - bank_address: Address of the bank - iban: (Optional) International Bank Account Number - swift_or_bic: SWIFT or BIC code of the bank 
     */
    constructor(otc_bank_account_id, info) { 
        
        CreateBankAccountRequest.initialize(this, otc_bank_account_id, info);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, otc_bank_account_id, info) { 
        obj['otc_bank_account_id'] = otc_bank_account_id;
        obj['info'] = info;
    }

    /**
     * Constructs a <code>CreateBankAccountRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateBankAccountRequest} obj Optional instance to populate.
     * @return {module:model/CreateBankAccountRequest} The populated <code>CreateBankAccountRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateBankAccountRequest();

            if (data.hasOwnProperty('otc_bank_account_id')) {
                obj['otc_bank_account_id'] = ApiClient.convertToType(data['otc_bank_account_id'], 'String');
            }
            if (data.hasOwnProperty('info')) {
                obj['info'] = ApiClient.convertToType(data['info'], {'String': Object});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateBankAccountRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateBankAccountRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateBankAccountRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['otc_bank_account_id'] && !(typeof data['otc_bank_account_id'] === 'string' || data['otc_bank_account_id'] instanceof String)) {
            throw new Error("Expected the field `otc_bank_account_id` to be a primitive type in the JSON string but got " + data['otc_bank_account_id']);
        }

        return true;
    }


}

CreateBankAccountRequest.RequiredProperties = ["otc_bank_account_id", "info"];

/**
 * @member {String} otc_bank_account_id
 */
CreateBankAccountRequest.prototype['otc_bank_account_id'] = undefined;

/**
 * JSON-formatted bank account details. The object should include the following fields: - beneficiary_name: Name of the account holder - beneficiary_address: Address of the account holder - account_number: Bank account number - bank_name: Name of the bank - bank_address: Address of the bank - iban: (Optional) International Bank Account Number - swift_or_bic: SWIFT or BIC code of the bank 
 * @member {Object.<String, Object>} info
 */
CreateBankAccountRequest.prototype['info'] = undefined;






export default CreateBankAccountRequest;

