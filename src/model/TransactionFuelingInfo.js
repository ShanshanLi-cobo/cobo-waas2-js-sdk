/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TransactionFuelingInfo model module.
 * @module model/TransactionFuelingInfo
 */
class TransactionFuelingInfo {
    /**
     * Constructs a new <code>TransactionFuelingInfo</code>.
     * Details of the auto-fueling transaction that provides gas for the current transaction.
     * @alias module:model/TransactionFuelingInfo
     */
    constructor() { 
        
        TransactionFuelingInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TransactionFuelingInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransactionFuelingInfo} obj Optional instance to populate.
     * @return {module:model/TransactionFuelingInfo} The populated <code>TransactionFuelingInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransactionFuelingInfo();

            if (data.hasOwnProperty('request_id')) {
                obj['request_id'] = ApiClient.convertToType(data['request_id'], 'String');
            }
            if (data.hasOwnProperty('transaction_id')) {
                obj['transaction_id'] = ApiClient.convertToType(data['transaction_id'], 'String');
            }
            if (data.hasOwnProperty('main_transaction_id')) {
                obj['main_transaction_id'] = ApiClient.convertToType(data['main_transaction_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransactionFuelingInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransactionFuelingInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['request_id'] && !(typeof data['request_id'] === 'string' || data['request_id'] instanceof String)) {
            throw new Error("Expected the field `request_id` to be a primitive type in the JSON string but got " + data['request_id']);
        }
        // ensure the json data is a string
        if (data['transaction_id'] && !(typeof data['transaction_id'] === 'string' || data['transaction_id'] instanceof String)) {
            throw new Error("Expected the field `transaction_id` to be a primitive type in the JSON string but got " + data['transaction_id']);
        }
        // ensure the json data is a string
        if (data['main_transaction_id'] && !(typeof data['main_transaction_id'] === 'string' || data['main_transaction_id'] instanceof String)) {
            throw new Error("Expected the field `main_transaction_id` to be a primitive type in the JSON string but got " + data['main_transaction_id']);
        }

        return true;
    }


}



/**
 * The request ID of the transaction.
 * @member {String} request_id
 */
TransactionFuelingInfo.prototype['request_id'] = undefined;

/**
 * The transaction ID.
 * @member {String} transaction_id
 */
TransactionFuelingInfo.prototype['transaction_id'] = undefined;

/**
 * The UUID of the parent (main) transaction that this record is associated with. Set only when the current record is a gas/fee transaction initiated by Fee Station; omit for main transactions.
 * @member {String} main_transaction_id
 */
TransactionFuelingInfo.prototype['main_transaction_id'] = undefined;






export default TransactionFuelingInfo;

