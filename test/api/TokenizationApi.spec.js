/**
 * Cobo Wallet as a Service 2.0
 *
 * Contact: help@cobo.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import {ApiClient, Env} from "../../src/index.js";

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CoboWaas2);
  }
}(this, function(expect, CoboWaas2) {
  'use strict';

  var instance;

  beforeEach(function() {
    var apiClient = new ApiClient()
    apiClient.setEnv(new Env("https://api[.xxx].cobo.com/v2"));
    apiClient.setPrivateKey("<YOUR_API_PRIVATE_KEY_IN_HEX>");
    instance = new CoboWaas2.TokenizationApi(apiClient);
  });

  describe('TokenizationApi', function() {
    describe('burnTokenization', function() {
      it('should call burnTokenization successfully', function() {
        //uncomment below and update the code to test burnTokenization
        //instance.burnTokenization().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('estimateTokenizationFee', function() {
      it('should call estimateTokenizationFee successfully', function() {
        //uncomment below and update the code to test estimateTokenizationFee
        //instance.estimateTokenizationFee().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getTokenizationActivity', function() {
      it('should call getTokenizationActivity successfully', function() {
        //uncomment below and update the code to test getTokenizationActivity
        //instance.getTokenizationActivity().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getTokenizationAllowlistActivation', function() {
      it('should call getTokenizationAllowlistActivation successfully', function() {
        //uncomment below and update the code to test getTokenizationAllowlistActivation
        //instance.getTokenizationAllowlistActivation().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('getTokenizationInfo', function() {
      it('should call getTokenizationInfo successfully', function() {
        //uncomment below and update the code to test getTokenizationInfo
        //instance.getTokenizationInfo().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('issueToken', function() {
      it('should call issueToken successfully', function() {
        //uncomment below and update the code to test issueToken
        //instance.issueToken().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('listIssuedTokens', function() {
      it('should call listIssuedTokens successfully', function() {
        //uncomment below and update the code to test listIssuedTokens
        //instance.listIssuedTokens().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('listTokenizationActivities', function() {
      it('should call listTokenizationActivities successfully', function() {
        //uncomment below and update the code to test listTokenizationActivities
        //instance.listTokenizationActivities().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('listTokenizationAllowlistAddresses', function() {
      it('should call listTokenizationAllowlistAddresses successfully', function() {
        //uncomment below and update the code to test listTokenizationAllowlistAddresses
        //instance.listTokenizationAllowlistAddresses().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('listTokenizationBlocklistAddresses', function() {
      it('should call listTokenizationBlocklistAddresses successfully', function() {
        //uncomment below and update the code to test listTokenizationBlocklistAddresses
        //instance.listTokenizationBlocklistAddresses().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('listTokenizationHoldings', function() {
      it('should call listTokenizationHoldings successfully', function() {
        //uncomment below and update the code to test listTokenizationHoldings
        //instance.listTokenizationHoldings().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('listTokenizationPermissions', function() {
      it('should call listTokenizationPermissions successfully', function() {
        //uncomment below and update the code to test listTokenizationPermissions
        //instance.listTokenizationPermissions().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('listTokenizationSupportedChains', function() {
      it('should call listTokenizationSupportedChains successfully', function() {
        //uncomment below and update the code to test listTokenizationSupportedChains
        //instance.listTokenizationSupportedChains().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('mintTokenization', function() {
      it('should call mintTokenization successfully', function() {
        //uncomment below and update the code to test mintTokenization
        //instance.mintTokenization().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('pauseTokenization', function() {
      it('should call pauseTokenization successfully', function() {
        //uncomment below and update the code to test pauseTokenization
        //instance.pauseTokenization().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('tokenizationContractCall', function() {
      it('should call tokenizationContractCall successfully', function() {
        //uncomment below and update the code to test tokenizationContractCall
        //instance.tokenizationContractCall().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('unpauseTokenization', function() {
      it('should call unpauseTokenization successfully', function() {
        //uncomment below and update the code to test unpauseTokenization
        //instance.unpauseTokenization().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('updateTokenizationAllowlistActivation', function() {
      it('should call updateTokenizationAllowlistActivation successfully', function() {
        //uncomment below and update the code to test updateTokenizationAllowlistActivation
        //instance.updateTokenizationAllowlistActivation().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('updateTokenizationAllowlistAddresses', function() {
      it('should call updateTokenizationAllowlistAddresses successfully', function() {
        //uncomment below and update the code to test updateTokenizationAllowlistAddresses
        //instance.updateTokenizationAllowlistAddresses().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('updateTokenizationBlocklistAddresses', function() {
      it('should call updateTokenizationBlocklistAddresses successfully', function() {
        //uncomment below and update the code to test updateTokenizationBlocklistAddresses
        //instance.updateTokenizationBlocklistAddresses().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
    describe('updateTokenizationPermissions', function() {
      it('should call updateTokenizationPermissions successfully', function() {
        //uncomment below and update the code to test updateTokenizationPermissions
        //instance.updateTokenizationPermissions().then(function(data) {
        //    console.log(data);
        //}, function(error) {
        //    console.error(error);
        //});
      });
    });
  });

}));
